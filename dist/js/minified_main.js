function drawHighcharts(){Highcharts.chart("chart-container-millennial-income-1",{chart:{type:"bar",styledMode:!0,spacingBottom:55,spacingRight:40,spacingLeft:0,spacingTop:20},title:{text:null},data:{googleSpreadsheetKey:"11HG2FEUr7d3jcrSVcJbFjgyhPgaTrI4vv3AI59cnR-k",googleSpreadsheetWorksheet:1},plotOptions:{series:{groupPadding:.1,dataLabels:{enabled:!0,format:"{y}%",x:10},clip:!1}},legend:{align:"right",symbolRadius:0,verticalAlign:"top",x:10,y:-10,symbolPadding:20,itemDistance:40,enabled:!1},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:10},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},visible:!1,max:40,tickAmount:5},credits:{enabled:!1},tooltip:{shadow:!1,padding:10},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-8},tooltip:{enabled:!1}}}]}}),Highcharts.chart("chart-container-millennial-income-2",{chart:{type:"bar",styledMode:!0,spacingBottom:55,spacingRight:40,spacingLeft:10,spacingTop:20},title:{text:null},data:{googleSpreadsheetKey:"11HG2FEUr7d3jcrSVcJbFjgyhPgaTrI4vv3AI59cnR-k",googleSpreadsheetWorksheet:2},plotOptions:{series:{groupPadding:.1,dataLabels:{enabled:!0,format:"{y}%",x:10}}},legend:{align:"right",symbolRadius:0,verticalAlign:"top",x:0,y:0,symbolPadding:20,itemDistance:40,itemMarginBottom:40,enabled:!1},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:10},yAxis:{title:!1,visible:!1,labels:{useHTML:!0,overflow:"allow"},tickAmount:4},credits:{enabled:!1},tooltip:{shadow:!1,padding:10},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-8},tooltip:{enabled:!1}}}]}}),Highcharts.chart("chart-container-millennial-income-3",{chart:{type:"line",styledMode:!0,spacingBottom:35,spacingRight:40,spacingLeft:15,spacingTop:20},title:{text:null},data:{googleSpreadsheetKey:"11HG2FEUr7d3jcrSVcJbFjgyhPgaTrI4vv3AI59cnR-k",googleSpreadsheetWorksheet:3},plotOptions:{series:{lineWidth:1,clip:!1,marker:{enabled:!1,symbol:"circle",fillColor:"#ffffff",states:{hover:{fillColor:"#ffffff"}}}}},legend:{align:"right",symbolRadius:0,verticalAlign:"top",x:0,y:10,symbolPadding:20,itemDistance:40,itemMarginBottom:40,floating:!0},xAxis:{labels:{style:{whiteSpace:"nowrap"}},type:"category",tickLength:10,tickInterval:8},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},min:-15,max:0,tickAmount:6},credits:{enabled:!1},tooltip:{shadow:!1,padding:10},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-8},tooltip:{enabled:!1}}}]}}),Highcharts.chart("chart-container-millennial-income-4",{chart:{type:"column",styledMode:!0,spacingBottom:35,spacingRight:40,spacingLeft:0,spacingTop:20},title:{text:null},data:{googleSpreadsheetKey:"11HG2FEUr7d3jcrSVcJbFjgyhPgaTrI4vv3AI59cnR-k",googleSpreadsheetWorksheet:4},plotOptions:{series:{groupPadding:.1,clip:!1}},legend:{align:"right",symbolRadius:0,verticalAlign:"top",x:0,y:400,symbolPadding:20,itemDistance:40,itemMarginBottom:40,floating:!0},xAxis:{labels:{style:{whiteSpace:"nowrap"}},type:"category",tickLength:10},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},min:-75,max:0,tickAmount:4},credits:{enabled:!1},tooltip:{shadow:!1,padding:10},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-8},tooltip:{enabled:!1}}}]}}),Highcharts.chart("chart-container-millennial-income-5",{chart:{type:"heatmap",styledMode:!0,spacingBottom:55,spacingRight:40,spacingLeft:0,spacingTop:20},title:{text:null},series:[{dataLabels:{enabled:!0,format:"{point.value}%"},data:[[0,0,5],[1,0,-4],[2,0,-3],[3,0,10],[4,0,6],[0,1,49],[1,1,13],[2,1,-4],[3,1,4],[4,1,4],[0,2,46],[1,2,-5],[2,2,-17],[3,2,-3],[4,2,7],[0,3,38],[1,3,-29],[2,3,-27],[3,3,-12],[4,3,-5],[0,4,-3],[1,4,-43],[2,4,-45],[3,4,-22],[4,4,9],[0,5,-43],[1,5,-48],[2,5,-55],[3,5,-40],[4,5,-11],[0,6,null],[1,6,null],[2,6,null],[3,6,-50],[4,6,-50]]}],legend:{align:"right",layout:"vertical",verticalAlign:"top",y:-38,symbolHeight:680,itemWidth:80,labelFormatter:function(){return this.name},enabled:!1},xAxis:{categories:["2007","2010","2013","2016","2019"],title:"Survey year"},yAxis:{title:!1,categories:["1930s","1940s","1950s","1960s","1970s","1980s","1990s"],reversed:!0},colorAxis:{reversed:!0,min:-55,max:55,stops:[[0,"#FF685D"],[.35,"#ffbaaf"],[.5,"#ffffff"],[.65,"#b9f6e4"],[.9,"#61EBC9"]]},credits:{enabled:!1},tooltip:{shadow:!1,padding:10},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-8},tooltip:{enabled:!1}}}]}})}Highcharts.setOptions({lang:{thousandsSep:","}}),"complete"===document.readyState||"interactive"===document.readyState?drawHighcharts():document.addEventListener("DOMContentLoaded",drawHighcharts);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
